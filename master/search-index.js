var searchIndex = JSON.parse('{\
"dfw":{"doc":"DFW - Docker Firewall Framework in RustFor detailed …","i":[[0,"errors","dfw","Errors, using <code>failure</code>.",null,null],[4,"DFWError","dfw::errors","",null,null],[13,"NFTablesError","","",0,null],[12,"stdout","dfw::errors::DFWError","",1,null],[12,"stderr","","",1,null],[13,"TraitMethodUnimplemented","dfw::errors","",0,null],[12,"method","dfw::errors::DFWError","",2,null],[6,"Result","dfw::errors","",null,null],[0,"iptables","dfw","This module implements the iptables backend for DFW.",null,null],[0,"types","dfw::iptables","The types in this module make up the structure of the …",null,null],[3,"Defaults","dfw::iptables::types","The defaults/configuration for the iptables backend.",null,null],[12,"initialization","","The optional initialization section.",3,null],[3,"Initialization","","The initialization section allows you to add custom rules …",null,null],[12,"v4","","Initialization rules for iptables (IPv4). Expects a map …",4,null],[12,"v6","","Initialization rules for ip6tables (IPv6). Expects a map …",4,null],[3,"Iptables","dfw::iptables","Marker struct to implement iptables as a firewall backend.",null,null],[11,"get_rules","","Retrieve the current text that would be passed to …",5,[[["vec",3],["iptablesrule",4],["iptablesrulediscriminants",4]],[["string",3],["vec",3]]]],[4,"IptablesRule","","Rule representation for iptables firewall backend.",null,null],[13,"V4","","IPv4",6,null],[13,"V6","","IPv6",6,null],[4,"IptablesRuleDiscriminants","","Auto-generated discriminant enum variants",null,null],[13,"V4","","IPv4",7,null],[13,"V6","","IPv6",7,null],[4,"PolicyOrRule","","Policy or rule representation for iptables firewall …",null,null],[13,"Policy","","Rule specifying a chain policy.",8,null],[12,"table","dfw::iptables::PolicyOrRule","Associated iptables table.",9,null],[12,"chain","","Associated iptables chain.",9,null],[12,"policy","","Policy to set.",9,null],[13,"Rule","dfw::iptables","Actual filter rule that will be added to a chain.",8,null],[12,"table","dfw::iptables::PolicyOrRule","Associated iptables table.",10,null],[12,"chain","","Associated iptables chain.",10,null],[12,"value","","The rule itself in valid iptables syntax.",10,null],[0,"nftables","dfw","This module implements the nftables backend for DFW.",null,null],[0,"types","dfw::nftables","The types in this module make up the structure of the …",null,null],[3,"Defaults","dfw::nftables::types","The defaults/configuration for the nftables backend.",null,null],[12,"custom_tables","","Specify the names of custom nft-tables that should be …",11,null],[12,"initialization","","The optional initialization section.",11,null],[3,"Table","","Reference to an nftables table, specifically to the …",null,null],[12,"name","","Name of the custom table.",12,null],[12,"chains","","Names of the input and forward chains defined within the …",12,null],[3,"Initialization","","The initialization section allows you to execute any …",null,null],[12,"rules","","Initialization rules for nftables",13,null],[3,"Nftables","dfw::nftables","Marker struct to implement nftables as a firewall backend.",null,null],[4,"Family","","Representation of nftables table-families.",null,null],[13,"Ip","","IPv4 table family",14,null],[13,"Ip6","","IPv6 table family",14,null],[13,"Inet","","Dualstack IPv4/IPv6 table family",14,null],[13,"Arp","","ARP table family",14,null],[13,"Bridge","","Bridge table family",14,null],[13,"Netdev","","Netdev table family",14,null],[4,"Type","","Representation of nftables chain-types.",null,null],[13,"Filter","","Is used to filter packets.",15,null],[13,"Route","","Is used to reroute packets if any relevant IP header …",15,null],[13,"Nat","","Is used to perform Networking Address Translation (NAT).",15,null],[4,"Hook","","Representation of nftables chain hooks.",null,null],[13,"Ingress","","Ingress allows traffic-filtering before pre-routing, …",16,null],[13,"Prerouting","","Prerouting allows traffic-filtering before the packets …",16,null],[13,"Input","","Input allows traffic-filtering for packets that have been …",16,null],[13,"Forward","","Forward allows traffic-filtering for packets that were …",16,null],[13,"Output","","Output allows traffic-filtering for packets leaving the …",16,null],[13,"Postrouting","","Postrouting allows traffic-filtering for already routed …",16,null],[0,"process","dfw","This module holds the types related to configuration …",null,null],[8,"Process","dfw::process","This trait allows a type to define its own processing …",null,null],[10,"process","","Process the current type within the given <code>ProcessContext</code>, …",17,[[["processcontext",3]],[["result",6],["option",4]]]],[3,"ProcessContext","","Enclosing struct to manage rule processing.",null,null],[11,"new","","Create a new instance of <code>ProcessDFW</code> for rule processing.",18,[[["processingoptions",3],["dfw",3],["bool",15],["logger",3],["docker",3]],[["result",6],["processcontext",3]]]],[11,"process","","Start the processing using the configuration given at …",18,[[],["result",6]]],[4,"ContainerFilter","","Option to filter the containers to be processed",null,null],[13,"All","","Process all containers, i.e. don\'t filter.",19,null],[13,"Running","","Only process running containers.",19,null],[3,"ProcessingOptions","","Options to configure the processing procedure.",null,null],[12,"container_filter","","Option to filter the containers to be processed, see …",20,null],[0,"types","dfw","The types in this module make up the structure of the …",null,null],[3,"DFW","dfw::types","<code>DFW</code> is the parent type defining the complete …",null,null],[12,"global_defaults","","The <code>defaults</code> configuration section.",21,null],[12,"backend_defaults","","The <code>backend_defaults</code> configuration section",21,null],[12,"initialization","","This field is <strong>DEPRECATED!</strong>Provide the custom tables in the …",21,null],[12,"container_to_container","","The <code>container_to_container</code> configuration section",21,null],[12,"container_to_wider_world","","The <code>container_to_wider_world</code> configuration section",21,null],[12,"container_to_host","","The <code>container_to_host</code> configuration section",21,null],[12,"wider_world_to_container","","The <code>wider_world_to_container</code> configuration section",21,null],[12,"container_dnat","","The <code>container_dnat</code> configuration section",21,null],[3,"GlobalDefaults","","The default configuration section, used by DFW for rule …",null,null],[12,"external_network_interfaces","","This defines the external network interfaces of the host …",22,null],[12,"default_docker_bridge_to_host_policy","","This defines whether the default Docker bridge (usually …",22,null],[12,"custom_tables","","This field is <strong>DEPRECATED!</strong>Provide the custom tables in the …",22,null],[3,"ContainerToContainer","","The container-to-container section, defining how …",null,null],[12,"default_policy","","The <code>default_policy</code> defines the default for when there is …",23,null],[12,"rules","","An optional list of rules, see <code>ContainerToContainerRule</code>.",23,null],[3,"ContainerToContainerRule","","Definition for a rule to be used in the …",null,null],[12,"network","","Common network between the source container and the …",24,null],[12,"src_container","","Source container to apply the rule to.",24,null],[12,"dst_container","","Destination container to apply the rule to.",24,null],[12,"matches","","Additional match-string, which will be added to the …",24,null],[12,"verdict","","Verdict for rule (accept, drop or reject).",24,null],[3,"ContainerToWiderWorld","","The container-to-wider-world section, defining how …",null,null],[12,"default_policy","","The <code>default_policy</code> defines the default for when there is …",25,null],[12,"rules","","An optional list of rules, see <code>ContainerToWiderWorldRule</code>.",25,null],[3,"ContainerToWiderWorldRule","","Definition for a rule to be used in the …",null,null],[12,"network","","Network of the source container to apply the rule to.",26,null],[12,"src_container","","Source container to apply the rule to.",26,null],[12,"matches","","Additional match-string, which will be added to the …",26,null],[12,"verdict","","Verdict for rule (accept, drop or reject).",26,null],[12,"external_network_interface","","Specific external network interface to target.",26,null],[3,"ContainerToHost","","The container-to-host section, defining how containers …",null,null],[12,"default_policy","","The <code>default_policy</code> defines the default for when there is …",27,null],[12,"rules","","An optional list of rules, see <code>ContainerToHostRule</code>.",27,null],[3,"ContainerToHostRule","","Definition for a rule to be used in the container-to-host …",null,null],[12,"network","","Network of the source container to apply the rule to.",28,null],[12,"src_container","","Source container to apply the rule to.",28,null],[12,"matches","","Additional match-string, which will be added to the …",28,null],[12,"verdict","","Verdict for rule (accept, drop or reject).",28,null],[3,"WiderWorldToContainer","","The wider-world-to-container section, defining how …",null,null],[12,"rules","","An optional list of rules, see <code>WiderWorldToContainerRule</code>.",29,null],[3,"WiderWorldToContainerRule","","Definition for a rule to be used in the …",null,null],[12,"network","","Network of the destination container to apply the rule to.",30,null],[12,"dst_container","","Destination container to apply the rule to.",30,null],[12,"expose_port","","Ports to apply the rule to.",30,null],[12,"external_network_interface","","Specific external network interface to target.",30,null],[12,"expose_via_ipv6","","Configure if the container should be exposed via IPv6, …",30,null],[12,"source_cidr_v4","","Source CIDRs (IPv4) to which incoming traffic should be …",30,null],[12,"source_cidr_v6","","Source CIDRs (IPv6) to which incoming traffic should be …",30,null],[3,"ExposePort","","Struct to hold a port definition to expose on the …",null,null],[12,"host_port","","Port the <code>container_port</code> should be exposed to on the host.",31,null],[12,"container_port","","Port the <code>host_port</code> should map to into the container.",31,null],[12,"family","","Family of the exposed port.",31,null],[3,"ExposePortBuilder","","Builder for <code>ExposePort</code>.",null,null],[12,"host_port","","Port the <code>container_port</code> should be exposed to on the host.",32,null],[12,"container_port","","Port the <code>host_port</code> should map to into the container.",32,null],[12,"family","","Family of the exposed port.",32,null],[11,"host_port","","Port the <code>container_port</code> should be exposed to on the host.",32,[[["u16",15]]]],[11,"container_port","","Port the <code>host_port</code> should map to into the container.",32,[[["option",4],["u16",15]]]],[11,"family","","Family of the exposed port.",32,[[["string",3]]]],[11,"build","","Builds a new <code>ExposePort</code>.",32,[[],[["exposeport",3],["result",4],["string",3]]]],[3,"ContainerDNAT","","The container-DNAT section, defining how containers can …",null,null],[12,"rules","","An optional list of rules, see <code>ContainerDNATRule</code>.",33,null],[3,"ContainerDNATRule","","Definition for a rule to be used in the container-DNAT …",null,null],[12,"src_network","","Network of the source container to apply the rule to.",34,null],[12,"src_container","","Source container to apply the rule to.",34,null],[12,"dst_network","","Network of the destination container to apply the rule to.",34,null],[12,"dst_container","","Destination container to apply the rule to.",34,null],[12,"expose_port","","Ports to apply the rule to.",34,null],[4,"ChainPolicy","","Representation of chain policies.",null,null],[13,"Accept","","The accept verdict means that the packet will keep …",35,null],[13,"Drop","","The drop verdict means that the packet is discarded if …",35,null],[4,"RuleVerdict","","Representation of rule policies.",null,null],[13,"Accept","","The accept verdict means that the packet will keep …",36,null],[13,"Drop","","The drop verdict means that the packet is discarded if …",36,null],[13,"Reject","","The reject verdict means that the packet is responded to …",36,null],[0,"util","dfw","Utilities module",null,null],[5,"load_file","dfw::util","Load single TOML-file from path and deserialize it into …",null,[[["str",15]],["result",6]]],[5,"load_path","","Load all TOML-files from a path, concatenate their …",null,[[["str",15]],["result",6]]],[8,"FutureExt","","An extension trait for <code>Future</code> allowing synchronized …",null,null],[11,"sync","","Execute future synchronously, blocking until a result can …",37,[[]]],[8,"FirewallBackend","dfw","This trait is used to distinguish between different …",null,null],[16,"Rule","","Associated type identifying the rule-type returned.",38,null],[16,"Defaults","","Associated type representing the firewall backend …",38,null],[10,"apply","","Apply the processed rules.",38,[[["vec",3],["processcontext",3]],["result",6]]],[11,"from","dfw::errors","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"as_fail","","",0,[[],["fail",8]]],[11,"vzip","","",0,[[]]],[11,"from","dfw::iptables::types","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","dfw::iptables","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","dfw::nftables::types","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","dfw::nftables","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","dfw::process","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","dfw::types","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"to_string","","",36,[[],["string",3]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"process","","",21,[[["processcontext",3]],[["result",6],["option",4]]]],[11,"process","","",22,[[["processcontext",3]],[["result",6],["option",4]]]],[11,"process","","",23,[[["processcontext",3]],[["result",6],["option",4]]]],[11,"process","","",24,[[["processcontext",3]],[["result",6],["option",4]]]],[11,"process","","",25,[[["processcontext",3]],[["result",6],["option",4]]]],[11,"process","","",26,[[["processcontext",3]],[["result",6],["option",4]]]],[11,"process","","",27,[[["processcontext",3]],[["result",6],["option",4]]]],[11,"process","","",28,[[["processcontext",3]],[["result",6],["option",4]]]],[11,"process","","",29,[[["processcontext",3]],[["result",6],["option",4]]]],[11,"process","","",30,[[["processcontext",3]],[["result",6],["option",4]]]],[11,"process","","",33,[[["processcontext",3]],[["result",6],["option",4]]]],[11,"process","","",34,[[["processcontext",3]],[["result",6],["option",4]]]],[11,"process","","",21,[[["processcontext",3]],[["result",6],["option",4]]]],[11,"process","","",22,[[["processcontext",3]],[["result",6],["option",4]]]],[11,"process","","",23,[[["processcontext",3]],[["result",6],["option",4]]]],[11,"process","","",24,[[["processcontext",3]],[["result",6],["option",4]]]],[11,"process","","",25,[[["processcontext",3]],[["result",6],["option",4]]]],[11,"process","","",26,[[["processcontext",3]],[["result",6],["option",4]]]],[11,"process","","",27,[[["processcontext",3]],[["result",6],["option",4]]]],[11,"process","","",28,[[["processcontext",3]],[["result",6],["option",4]]]],[11,"process","","",29,[[["processcontext",3]],[["result",6],["option",4]]]],[11,"process","","",30,[[["processcontext",3]],[["result",6],["option",4]]]],[11,"process","","",33,[[["processcontext",3]],[["result",6],["option",4]]]],[11,"process","","",34,[[["processcontext",3]],[["result",6],["option",4]]]],[11,"apply","dfw::iptables","",5,[[["vec",3],["processcontext",3]],["result",6]]],[11,"apply","dfw::nftables","",39,[[["vec",3],["processcontext",3]],["result",6]]],[11,"from","dfw::iptables","",7,[[["iptablesrule",4]],["iptablesrulediscriminants",4]]],[11,"from","","",7,[[["iptablesrule",4]],["iptablesrulediscriminants",4]]],[11,"clone","dfw::iptables::types","",3,[[],["defaults",3]]],[11,"clone","","",4,[[],["initialization",3]]],[11,"clone","dfw::iptables","",6,[[],["iptablesrule",4]]],[11,"clone","","",7,[[],["iptablesrulediscriminants",4]]],[11,"clone","","",8,[[],["policyorrule",4]]],[11,"clone","dfw::nftables::types","",11,[[],["defaults",3]]],[11,"clone","","",12,[[],["table",3]]],[11,"clone","","",13,[[],["initialization",3]]],[11,"clone","dfw::nftables","",14,[[],["family",4]]],[11,"clone","","",15,[[],["type",4]]],[11,"clone","","",16,[[],["hook",4]]],[11,"clone","dfw::process","",19,[[],["containerfilter",4]]],[11,"clone","","",20,[[],["processingoptions",3]]],[11,"clone","dfw::types","",21,[[],["dfw",3]]],[11,"clone","","",22,[[],["globaldefaults",3]]],[11,"clone","","",23,[[],["containertocontainer",3]]],[11,"clone","","",24,[[],["containertocontainerrule",3]]],[11,"clone","","",25,[[],["containertowiderworld",3]]],[11,"clone","","",26,[[],["containertowiderworldrule",3]]],[11,"clone","","",27,[[],["containertohost",3]]],[11,"clone","","",28,[[],["containertohostrule",3]]],[11,"clone","","",29,[[],["widerworldtocontainer",3]]],[11,"clone","","",30,[[],["widerworldtocontainerrule",3]]],[11,"clone","","",31,[[],["exposeport",3]]],[11,"clone","","",32,[[],["exposeportbuilder",3]]],[11,"clone","","",33,[[],["containerdnat",3]]],[11,"clone","","",34,[[],["containerdnatrule",3]]],[11,"clone","","",35,[[],["chainpolicy",4]]],[11,"clone","","",36,[[],["ruleverdict",4]]],[11,"default","dfw::nftables::types","",11,[[],["defaults",3]]],[11,"default","","",12,[[],["table",3]]],[11,"default","","",13,[[],["initialization",3]]],[11,"default","dfw::process","",20,[[]]],[11,"default","dfw::types","",22,[[],["globaldefaults",3]]],[11,"default","","",31,[[],["exposeport",3]]],[11,"default","","",32,[[],["exposeportbuilder",3]]],[11,"default","","",35,[[],["chainpolicy",4]]],[11,"default","","",36,[[],["ruleverdict",4]]],[11,"eq","dfw::iptables::types","",3,[[["defaults",3]],["bool",15]]],[11,"ne","","",3,[[["defaults",3]],["bool",15]]],[11,"eq","","",4,[[["initialization",3]],["bool",15]]],[11,"ne","","",4,[[["initialization",3]],["bool",15]]],[11,"eq","dfw::iptables","",7,[[["iptablesrulediscriminants",4]],["bool",15]]],[11,"eq","dfw::nftables::types","",11,[[["defaults",3]],["bool",15]]],[11,"ne","","",11,[[["defaults",3]],["bool",15]]],[11,"eq","","",12,[[["table",3]],["bool",15]]],[11,"ne","","",12,[[["table",3]],["bool",15]]],[11,"eq","","",13,[[["initialization",3]],["bool",15]]],[11,"ne","","",13,[[["initialization",3]],["bool",15]]],[11,"eq","dfw::process","",19,[[["containerfilter",4]],["bool",15]]],[11,"eq","","",20,[[["processingoptions",3]],["bool",15]]],[11,"ne","","",20,[[["processingoptions",3]],["bool",15]]],[11,"eq","dfw::types","",21,[[["dfw",3]],["bool",15]]],[11,"ne","","",21,[[["dfw",3]],["bool",15]]],[11,"eq","","",22,[[["globaldefaults",3]],["bool",15]]],[11,"ne","","",22,[[["globaldefaults",3]],["bool",15]]],[11,"eq","","",23,[[["containertocontainer",3]],["bool",15]]],[11,"ne","","",23,[[["containertocontainer",3]],["bool",15]]],[11,"eq","","",24,[[["containertocontainerrule",3]],["bool",15]]],[11,"ne","","",24,[[["containertocontainerrule",3]],["bool",15]]],[11,"eq","","",25,[[["containertowiderworld",3]],["bool",15]]],[11,"ne","","",25,[[["containertowiderworld",3]],["bool",15]]],[11,"eq","","",26,[[["containertowiderworldrule",3]],["bool",15]]],[11,"ne","","",26,[[["containertowiderworldrule",3]],["bool",15]]],[11,"eq","","",27,[[["containertohost",3]],["bool",15]]],[11,"ne","","",27,[[["containertohost",3]],["bool",15]]],[11,"eq","","",28,[[["containertohostrule",3]],["bool",15]]],[11,"ne","","",28,[[["containertohostrule",3]],["bool",15]]],[11,"eq","","",29,[[["widerworldtocontainer",3]],["bool",15]]],[11,"ne","","",29,[[["widerworldtocontainer",3]],["bool",15]]],[11,"eq","","",30,[[["widerworldtocontainerrule",3]],["bool",15]]],[11,"ne","","",30,[[["widerworldtocontainerrule",3]],["bool",15]]],[11,"eq","","",31,[[["exposeport",3]],["bool",15]]],[11,"ne","","",31,[[["exposeport",3]],["bool",15]]],[11,"eq","","",33,[[["containerdnat",3]],["bool",15]]],[11,"ne","","",33,[[["containerdnat",3]],["bool",15]]],[11,"eq","","",34,[[["containerdnatrule",3]],["bool",15]]],[11,"ne","","",34,[[["containerdnatrule",3]],["bool",15]]],[11,"eq","","",35,[[["chainpolicy",4]],["bool",15]]],[11,"eq","","",36,[[["ruleverdict",4]],["bool",15]]],[11,"fmt","dfw::errors","",0,[[["formatter",3]],["result",6]]],[11,"fmt","dfw::iptables::types","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","dfw::iptables","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","dfw::nftables::types","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","dfw::nftables","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","dfw::process","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","dfw::types","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","dfw::errors","",0,[[["formatter",3]],["result",6]]],[11,"fmt","dfw::nftables","",14,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",15,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",16,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","dfw::types","",35,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",36,[[["formatter",3]],[["result",4],["error",3]]]],[11,"hash","dfw::nftables::types","",12,[[]]],[11,"hash","dfw::types","",22,[[]]],[11,"hash","","",23,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",26,[[]]],[11,"hash","","",27,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",30,[[]]],[11,"hash","","",31,[[]]],[11,"hash","","",33,[[]]],[11,"hash","","",34,[[]]],[11,"hash","","",35,[[]]],[11,"hash","","",36,[[]]],[11,"from_str","","Convert a formatted string into a <code>ExposePort</code>.",31,[[["str",15]],["result",4]]],[11,"from_str","","",35,[[["str",15]],[["chainpolicy",4],["result",4]]]],[11,"from_str","","",36,[[["str",15]],[["result",4],["ruleverdict",4]]]],[11,"deserialize","dfw::iptables::types","",3,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","dfw::nftables::types","",11,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]],[11,"deserialize","","",13,[[],["result",4]]],[11,"deserialize","dfw::types","",21,[[],["result",4]]],[11,"deserialize","","",22,[[],["result",4]]],[11,"deserialize","","",23,[[],["result",4]]],[11,"deserialize","","",24,[[],["result",4]]],[11,"deserialize","","",25,[[],["result",4]]],[11,"deserialize","","",26,[[],["result",4]]],[11,"deserialize","","",27,[[],["result",4]]],[11,"deserialize","","",28,[[],["result",4]]],[11,"deserialize","","",29,[[],["result",4]]],[11,"deserialize","","",30,[[],["result",4]]],[11,"deserialize","","",31,[[],["result",4]]],[11,"deserialize","","",33,[[],["result",4]]],[11,"deserialize","","",34,[[],["result",4]]],[11,"deserialize","","",35,[[],["result",4]]],[11,"deserialize","","",36,[[],["result",4]]],[11,"name","dfw::errors","",0,[[],[["option",4],["str",15]]]],[11,"cause","","",0,[[],[["fail",8],["option",4]]]],[11,"backtrace","","",0,[[],[["backtrace",3],["option",4]]]],[11,"serialize","dfw::types","",35,[[["serializer",8],["record",3],["key",6]],["result",6]]],[11,"serialize","","",36,[[["serializer",8],["record",3],["key",6]],["result",6]]]],"p":[[4,"DFWError"],[13,"NFTablesError"],[13,"TraitMethodUnimplemented"],[3,"Defaults"],[3,"Initialization"],[3,"Iptables"],[4,"IptablesRule"],[4,"IptablesRuleDiscriminants"],[4,"PolicyOrRule"],[13,"Policy"],[13,"Rule"],[3,"Defaults"],[3,"Table"],[3,"Initialization"],[4,"Family"],[4,"Type"],[4,"Hook"],[8,"Process"],[3,"ProcessContext"],[4,"ContainerFilter"],[3,"ProcessingOptions"],[3,"DFW"],[3,"GlobalDefaults"],[3,"ContainerToContainer"],[3,"ContainerToContainerRule"],[3,"ContainerToWiderWorld"],[3,"ContainerToWiderWorldRule"],[3,"ContainerToHost"],[3,"ContainerToHostRule"],[3,"WiderWorldToContainer"],[3,"WiderWorldToContainerRule"],[3,"ExposePort"],[3,"ExposePortBuilder"],[3,"ContainerDNAT"],[3,"ContainerDNATRule"],[4,"ChainPolicy"],[4,"RuleVerdict"],[8,"FutureExt"],[8,"FirewallBackend"],[3,"Nftables"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);