(function() {var implementors = {};
implementors["dfw"] = [{"text":"impl RefUnwindSafe for DFWError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Defaults","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Initialization","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Iptables","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IptablesRule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IptablesRuleDiscriminants","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PolicyOrRule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Defaults","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Table","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Initialization","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Nftables","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Family","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Hook","synthetic":true,"types":[]},{"text":"impl&lt;'a, B&gt; !RefUnwindSafe for ProcessContext&lt;'a, B&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContainerFilter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProcessingOptions","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for DFW&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as FirewallBackend&gt;::Defaults: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GlobalDefaults","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContainerToContainer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContainerToContainerRule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContainerToWiderWorld","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContainerToWiderWorldRule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContainerToHost","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContainerToHostRule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WiderWorldToContainer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WiderWorldToContainerRule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExposePort","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExposePortBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContainerDNAT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContainerDNATRule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChainPolicy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RuleVerdict","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()